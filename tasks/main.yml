---
# tasks file for bootstrap-rpi.yml
- block:
    - debug:
        msg: "ssh -o StrictHostKeyChecking=no
        -o User={{ ansible_user }}
        -o ConnectTimeout=5 -o PreferredAuthentications=publickey
        -o PubkeyAuthentication=yes -i {{ ansible_ssh_private_key_file }}
        -p {{ ansible_port }} {{ ansible_host }}"

    - name: Check if connection against host is possible
      ansible.builtin.command: >
        ssh 
        -o StrictHostKeyChecking=no
        -o User={{ ansible_user }}
        -o ConnectTimeout=5
        -o PreferredAuthentications=publickey
        -o PubkeyAuthentication=yes
        -i {{ ansible_ssh_private_key_file }}
        -p {{ ansible_port }} {{ ansible_host }}
      delegate_to: localhost
      ignore_errors: false
      changed_when: False

    - include: bootstrap-rpi.yml
      vars:
        ansible_become: yes
      when: force_bootstrap |bool
  rescue:
    - name: Ask the user whether they want to force a bootstrap as it seems the SSH fingerprint has changed since previous execution
      pause:
        prompt: "This might look odd - Are you setting up a new device? - Security advise: cancel this operation if not. Otherwise, press any key"

    - name: Remove SSH Fingerprint from known_hosts
      delegate_to: localhost
      delegate_facts: true
      ansible.builtin.known_hosts:
        name: "{{ item }}"
        state: absent
        path: "{{ ansible_env.HOME }}/.ssh/known_hosts"
      loop:
        - "{{ raspi_config_hostname }}"
        - "{{ ansible_host }}"
        - "{{ raspi_config_hostname.split('.')[0] }}"

    - name: Amend local connectivity for first SSH connection to the RaspberryPi
      set_fact:
        ansible_user: "{{ first_bootstrap_user }}"
        bootstrap_user: "{{ bootstrap_user }}"
        ansible_ssh_pass: "{{ first_bootstrap_password }}"
        ansible_become: yes
        ansible_become_user: root

    - include: bootstrap-rpi.yml
